{"version":3,"sources":["funcs.ts","assets/logo.svg","components/Logo/index.tsx","components/Menu/MenuItem/index.tsx","components/Menu/index.tsx","containers/Header/index.tsx","components/Helmet/index.tsx","components/Title/index.tsx","components/Card/index.tsx","containers/Cards/index.tsx","pages/Home/index.tsx","components/Input/index.tsx","components/Button/index.tsx","containers/WeatherForm/index.tsx","components/Cell/index.tsx","containers/Timer/index.tsx","App.tsx","pages/Time/index.tsx","pages/Weather/index.tsx","index.tsx"],"names":["TimeTypes","Logo","props","node","src","logo","className","href","alt","width","height","to","MenuItem","activeClassName","icon","text","renderMenuItems","items","map","item","undefined","Menu","menuItems","Header","Helmet","title","Title","children","Card","link","Cards","primary","getHello","currentHour","Date","getHours","getToday","date","toLocaleDateString","weekday","day","month","trim","toUpperCase","slice","getTimeLabel","val","type","decCache","titles","Math","min","cards","HomePage","Input","id","value","valid","onChange","htmlFor","placeholder","Button","onClick","WeatherForm","city","initialValue","minLength","useState","setValue","setValid","e","target","length","useInput","AutoInit","console","log","Cell","label","Timer","hour","minute","second","time","setTime","tickInterval","setInterval","localeTime","newTime","split","timeChangeHandler","toLocaleTimeString","useEffect","clearInterval","h","m","s","key","toString","Number","routes","path","Component","exact","App","match","CSSTransition","timeout","classNames","unmountOnExit","mountOnEnter","in","render","document","body"],"mappings":"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","file":"static/js/main.cf8b8726.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\n// Weather API KEY: 9a2f3c0844d466865551ca8df54f619a\r\n\r\nexport enum TimeTypes {\r\n  'h' = 'h',\r\n  'm' = 'm',\r\n  's' = 's',\r\n}\r\n\r\nexport const getHello = (): string => {\r\n  let currentHour = new Date().getHours()\r\n\r\n  if (currentHour >= 5 && currentHour <= 11) return 'Доброе утро.'\r\n  if (currentHour >= 12 && currentHour <= 16) return 'Добрый день.'\r\n  if (currentHour >= 17 && currentHour <= 22) return 'Добрый вечер.'\r\n  if (currentHour >= 23 || (currentHour >= 0 && currentHour <= 4))\r\n    return 'Доброй ночи.'\r\n  return 'Здравствуйте.'\r\n}\r\n\r\nexport const getToday = (): string => {\r\n  let date = new Date().toLocaleDateString(undefined, {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'long',\r\n  })\r\n\r\n  return typeof date === 'string' && date.trim() !== ''\r\n    ? date[0].toUpperCase() + date.slice(1)\r\n    : 'Сегодня'\r\n}\r\n\r\nexport const getTimeLabel = (val: number, type: TimeTypes): string => {\r\n  const decCases = [2, 0, 1, 1, 1, 2]\r\n\r\n  let decCache: number[] = []\r\n  let titles: string[] = []\r\n\r\n  switch (type) {\r\n    case 'h':\r\n      titles = ['час', 'часа', 'часов']\r\n      break\r\n    case 'm':\r\n      titles = ['минута', 'минуты', 'минут']\r\n      break\r\n    case 's':\r\n      titles = ['секунда', 'секунды', 'секунд']\r\n      break\r\n  }\r\n\r\n  if (!decCache[val])\r\n    decCache[val] =\r\n      val % 100 > 4 && val % 100 < 20 ? 2 : decCases[Math.min(val % 10, 5)]\r\n  return titles[decCache[val]]\r\n}\r\n\r\nexport const useInput = (initialValue: string, minLength?: number) => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const [valid, setValid] = useState(false)\r\n\r\n  const onChange = (e: any) => {\r\n    if (minLength) setValid(e.target.value.length >= minLength)\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    valid,\r\n    onChange,\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.e9658c8b.svg\";","import { Link } from 'react-router-dom'\r\n\r\nimport { ILogo } from '../../types/components'\r\n\r\nimport logo from '../../assets/logo.svg'\r\n\r\nconst Logo: React.FC<ILogo> = (props) => {\r\n  const node = (\r\n    <img\r\n      src={logo}\r\n      className={\r\n        props.href\r\n          ? 'logo__img'\r\n          : 'logo' + props.className\r\n          ? ` ${props.className}`\r\n          : ''\r\n      }\r\n      alt={props.alt ?? 'Img: Weathr Logo'}\r\n      width={props.width}\r\n      height={props.height}\r\n    />\r\n  )\r\n\r\n  return props.href ? (\r\n    <Link\r\n      to={props.href}\r\n      className={`logo${props.className ? ` ${props.className}` : ''}`}\r\n    >\r\n      {node}\r\n    </Link>\r\n  ) : (\r\n    node\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import { NavLink } from 'react-router-dom'\r\n\r\nimport { IMenuItem } from '../../../types/components'\r\n\r\nconst MenuItem: React.FC<IMenuItem> = (props) => (\r\n  <NavLink\r\n    to={props.to}\r\n    className=\"menu-link\"\r\n    activeClassName={\r\n      props.activeClassName ? props.activeClassName : 'menu-link--current'\r\n    }\r\n  >\r\n    <li className={`menu-item${props.className ? ` ${props.className}` : ''}`}>\r\n      <i className={`material-icons menu-item__icon`}>{props.icon}</i>\r\n      <span className=\"menu-item__text\">{props.text}</span>\r\n    </li>\r\n  </NavLink>\r\n)\r\n\r\nexport default MenuItem\r\n","import MenuItem from './MenuItem'\r\n\r\nimport { IMenu, IMenuItem } from '../../types/components'\r\n\r\nconst renderMenuItems = (items: IMenuItem[], className?: string) =>\r\n  items.map((item: IMenuItem) => (\r\n    <MenuItem\r\n      text={item.text}\r\n      icon={item.icon}\r\n      to={item.to}\r\n      className={className ? className + '-item' : undefined}\r\n      activeClassName={className ? className + '-item--active' : undefined}\r\n    />\r\n  ))\r\n\r\nconst Menu: React.FC<IMenu> = ({ className, items }) => {\r\n  return (\r\n    <ul className={className ?? 'menu'}>{renderMenuItems(items, className)}</ul>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import Logo from '../../components/Logo'\r\nimport Menu from '../../components/Menu'\r\n\r\nimport { IMenuItem } from '../../types/components'\r\n\r\nconst menuItems: IMenuItem[] = [\r\n  {\r\n    text: 'Время',\r\n    icon: 'access_time',\r\n    to: '/time',\r\n  },\r\n  {\r\n    text: 'Погода',\r\n    icon: 'cloud_queue',\r\n    to: '/weather',\r\n  },\r\n]\r\n\r\nconst Header: React.FC = () => (\r\n  <header className=\"app-header\">\r\n    <Logo href=\"/\" />\r\n    <Menu items={menuItems} />\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import { Helmet as ReactHelmet } from 'react-helmet'\r\n\r\nconst Helmet: React.FC<{ title: string }> = (props) => (\r\n  <ReactHelmet title={props.title} />\r\n)\r\n\r\nexport default Helmet\r\n","import { IComponent } from '../../types/components'\r\n\r\nconst Title: React.FC<IComponent> = (props) => (\r\n  <h1 className={props.className + ' title'}>{props.children}</h1>\r\n)\r\n\r\nexport default Title\r\n","import { Link } from 'react-router-dom'\r\n\r\nimport { ICard } from '../../types/components'\r\n\r\nconst Card: React.FC<ICard> = (props) => (\r\n  <div className={`card ${props.className ? ' ' + props.className : ''}`}>\r\n    <div className=\"card-content white-text\">\r\n      <span className=\"card-title\">{props.title}</span>\r\n      <p>{props.text}</p>\r\n    </div>\r\n    <div className=\"card-action\">\r\n      <Link to={props.link}>Перейти</Link>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Card\r\n","import Card from '../../components/Card'\r\n\r\nimport { ICard } from '../../types/components'\r\nimport { ICards } from '../../types/containers'\r\n\r\nconst renderCards = (items: ICard[], className: string) =>\r\n  items.map((item: ICard) => (\r\n    <Card\r\n      link={item.link}\r\n      title={item.title}\r\n      text={item.text}\r\n      className={`${className}${\r\n        item.primary ? ' ' + className + '--primary' : ''\r\n      }\r\n      `}\r\n    ></Card>\r\n  ))\r\n\r\nconst Cards: React.FC<ICards> = (props) => (\r\n  <div className={props.className}>\r\n    {renderCards(props.items, props.className + '__item')}\r\n  </div>\r\n)\r\n\r\nexport default Cards\r\n","import Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport Cards from '../../containers/Cards'\r\n\r\nimport { getHello } from '../../funcs'\r\n\r\nimport { ICard } from '../../types/components'\r\n\r\nconst cards: ICard[] = [\r\n  {\r\n    title: 'Время',\r\n    text: 'Получите текущее время в вашем часовом поясе.',\r\n    link: '/time',\r\n    className: 'home-cards',\r\n    primary: true,\r\n  },\r\n  {\r\n    title: 'Погода',\r\n    text: 'Получите погоду на сегодня в указанном городе.',\r\n    link: '/weather',\r\n    className: 'home-cards',\r\n  },\r\n]\r\n\r\nconst HomePage: React.FC = () => (\r\n  <section className=\"home\">\r\n    <Helmet title=\"Weathr\" />\r\n    <Title className=\"home-title\">{getHello()}</Title>\r\n    <Cards className=\"home-cards\" items={cards} />\r\n  </section>\r\n)\r\n\r\nexport default HomePage\r\n","import { IInput } from '../../types/components'\r\n\r\nconst Input: React.FC<IInput> = (props) => {\r\n  return (\r\n    <div className={`input-field col s6 ${props.className}`}>\r\n      <input\r\n        id={props.className}\r\n        type=\"text\"\r\n        value={props.value}\r\n        data-valid={props.valid}\r\n        onChange={props.onChange}\r\n      />\r\n      <label htmlFor={props.className}>{props.placeholder}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import { IButton } from '../../types/components'\r\n\r\nconst Button: React.FC<IButton> = (props) => (\r\n  <button onClick={props.onClick} className={props.className}>\r\n    {props.text ?? props.children}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import { AutoInit } from 'materialize-css'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport { useInput } from '../../funcs'\r\n\r\nimport { IContainer } from '../../types/containers'\r\n\r\nconst WeatherForm: React.FC<IContainer> = (props) => {\r\n  const city = useInput('', 5)\r\n\r\n  AutoInit()\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <Input\r\n        {...city}\r\n        className={`${props.className}-input`}\r\n        placeholder=\"Ваш город\"\r\n      />\r\n      <Button\r\n        className={`${props.className}-button btn-floating btn-large waves-effect waves-light`}\r\n        onClick={() => console.log('click!')}\r\n      >\r\n        <span className={`material-icons ${props.className}-button__icon`}>\r\n          touch_app\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherForm\r\n","import { ICell } from '../../types/components'\r\n\r\nconst Cell: React.FC<ICell> = (props) => (\r\n  <div className={props.className}>\r\n    <span className={props.className + '__text'} data-label={props.label}>\r\n      {props.val}\r\n    </span>\r\n  </div>\r\n)\r\n\r\nexport default Cell\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport Cell from '../../components/Cell'\r\n\r\nimport { getTimeLabel, TimeTypes } from '../../funcs'\r\n\r\nimport { IContainer, ITimeState } from '../../types/containers'\r\nimport { ICellRender } from '../../types/components'\r\n\r\nconst renderCells = (items: ICellRender[], className: string) =>\r\n  items.map((item, key) => (\r\n    <Cell\r\n      className={className + '-item'}\r\n      val={item.val.toString().length !== 1 ? item.val : '0' + item.val}\r\n      label={getTimeLabel(Number(item.val), item.type)}\r\n      key={key}\r\n    />\r\n  ))\r\n\r\nconst Timer: React.FC<IContainer> = (props) => {\r\n  const [time, setTime] = useState<ITimeState>({\r\n    hour: '00',\r\n    minute: '00',\r\n    second: '00',\r\n  })\r\n\r\n  const timeChangeHandler = (localeTime: string) => {\r\n    let newTime = time\r\n\r\n    newTime.hour =\r\n      newTime.hour !== localeTime.split(':')[0]\r\n        ? localeTime.split(':')[0]\r\n        : newTime.hour\r\n\r\n    newTime.minute =\r\n      newTime.minute !== localeTime.split(':')[1]\r\n        ? localeTime.split(':')[1]\r\n        : newTime.minute\r\n\r\n    newTime.second =\r\n      newTime.second !== localeTime.split(':')[2]\r\n        ? localeTime.split(':')[2]\r\n        : newTime.second\r\n    setTime({ ...time, ...newTime })\r\n  }\r\n\r\n  const tickInterval = setInterval(() => {\r\n    timeChangeHandler(new Date().toLocaleTimeString())\r\n  }, 1000)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(tickInterval)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {renderCells(\r\n        [\r\n          {\r\n            val: time.hour,\r\n            type: TimeTypes.h,\r\n          },\r\n          {\r\n            val: time.minute,\r\n            type: TimeTypes.m,\r\n          },\r\n          {\r\n            val: time.second,\r\n            type: TimeTypes.s,\r\n          },\r\n        ],\r\n        props.className\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import { Route } from 'react-router'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport Header from './containers/Header'\r\nimport HomePage from './pages/Home'\r\nimport WeatherPage from './pages/Weather'\r\nimport TimePage from './pages/Time'\r\n\r\nconst routes = [\r\n  { path: '/', Component: HomePage, exact: true },\r\n  {\r\n    path: '/time',\r\n    Component: TimePage,\r\n  },\r\n  {\r\n    path: '/weather',\r\n    Component: WeatherPage,\r\n  },\r\n]\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <Header />\r\n    {routes.map(({ path, Component, exact }) => (\r\n      <Route key={path} exact={exact} path={path}>\r\n        {({ match }) => (\r\n          <CSSTransition\r\n            timeout={1000}\r\n            classNames=\"app-wrapper\"\r\n            unmountOnExit\r\n            mountOnEnter\r\n            in={match != null}\r\n          >\r\n            <Component />\r\n          </CSSTransition>\r\n        )}\r\n      </Route>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport Timer from '../../containers/Timer'\r\n\r\nimport { getToday } from '../../funcs'\r\n\r\nconst TimePage: React.FC = () => (\r\n  <section className=\"time\">\r\n    <Helmet title=\"Время | Weathr\" />\r\n    <Title className=\"time-title\">{getToday()}</Title>\r\n    <Timer className=\"time-wrapper\" />\r\n  </section>\r\n)\r\n\r\nexport default TimePage\r\n","import Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport WeatherForm from '../../containers/WeatherForm'\r\n\r\nconst WeatherPage: React.FC = () => (\r\n  <section className=\"weather\">\r\n    <Helmet title=\"Погода | Weathr\" />\r\n    <Title className=\"weather-title\">Погода</Title>\r\n    <WeatherForm className=\"weather-form\" />\r\n  </section>\r\n)\r\n\r\nexport default WeatherPage\r\n","import { StrictMode } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport './styles/index.sass'\r\n\r\nrender(\r\n  <StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StrictMode>,\r\n  document.body\r\n)\r\n"],"sourceRoot":""}