{"version":3,"sources":["funcs.ts","components/Tooltip/index.tsx","components/Tooltip/context.tsx","assets/logo.svg","components/Logo/index.tsx","components/Menu/MenuItem/index.tsx","components/Menu/index.tsx","containers/Header/index.tsx","components/Helmet/index.tsx","components/Title/index.tsx","components/Card/index.tsx","containers/Cards/index.tsx","pages/Home/index.tsx","components/Input/index.tsx","components/Button/index.tsx","containers/WeatherForm/index.tsx","components/Icon/index.tsx","containers/WeatherContainer/index.tsx","pages/Weather/index.tsx","components/Cell/index.tsx","containers/Timer/index.tsx","App.tsx","pages/Time/index.tsx","index.tsx"],"names":["TimeTypes","Tooltip","state","useTooltip","CSSTransition","timeout","classNames","unmountOnExit","mountOnEnter","in","status","className","style","left","x","top","y","title","initialState","TooltipContext","createContext","setState","context","useContext","undefined","Error","TooltipProvider","children","useState","tooltipState","setTooltipState","Provider","value","Logo","props","node","src","logo","href","alt","width","height","to","MenuItem","activeClassName","icon","text","renderMenuItems","items","map","item","Menu","menuItems","Header","Helmet","Title","Card","link","Cards","primary","WeatherIcons","пасмурно","ясно","гроза","дождь","getHello","currentHour","Date","getHours","getToday","date","toLocaleDateString","weekday","day","month","trim","toUpperCase","slice","getTimeLabel","val","type","decCache","titles","Math","min","getWeather","city","a","req","data","error","axios","get","then","res","catch","err","response","setWeatherIcon","convertTemp","temp","round","showToast","toast","html","cards","HomePage","Input","id","valid","onChange","onKeyPress","disabled","htmlFor","placeholder","Button","onClick","WeatherForm","initialValue","minLength","setValue","setValid","e","target","indexOf","length","useInput","AutoInit","buttonClickHandler","pageState","setPageState","weather","description","water","main","humidity","wind","speed","toFixed","temp_min","max","temp_max","feels","feels_like","substring","key","Icons","clouds","cloudWithSun","rain","sun","shtorm","Icon","WeatherContainer","targetDott","useRef","dottHoverHandler","newState","pageX","pageY","onMouseOver","onMouseOut","ref","Cell","label","Timer","hour","minute","second","time","setTime","tickInterval","setInterval","localeTime","newTime","split","timeChangeHandler","toLocaleTimeString","useEffect","clearInterval","h","m","s","toString","Number","routes","path","Component","exact","setWeather","App","match","render","document","body"],"mappings":"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","file":"static/js/main.64dfec08.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { toast } from 'materialize-css'\r\nimport axios from 'axios'\r\n\r\nconst apiKey = '&APPID=9a2f3c0844d466865551ca8df54f619a'\r\n\r\nexport enum TimeTypes {\r\n  'h' = 'h',\r\n  'm' = 'm',\r\n  's' = 's',\r\n}\r\n\r\nexport const WeatherIcons = {\r\n  пасмурно: 'clouds',\r\n  'переменная облачность': 'clouds',\r\n  'небольшой дождь': 'rain',\r\n  'облачно с прояснениями': 'cloudWithSun',\r\n  ясно: 'sun',\r\n  гроза: 'shtorm',\r\n  дождь: 'rain',\r\n}\r\n\r\nexport const getHello = (): string => {\r\n  let currentHour = new Date().getHours()\r\n\r\n  if (currentHour >= 5 && currentHour <= 11) return 'Доброе утро.'\r\n  if (currentHour >= 12 && currentHour <= 16) return 'Добрый день.'\r\n  if (currentHour >= 17 && currentHour <= 22) return 'Добрый вечер.'\r\n  if (currentHour >= 23 || (currentHour >= 0 && currentHour <= 4))\r\n    return 'Доброй ночи.'\r\n  return 'Здравствуйте.'\r\n}\r\n\r\nexport const getToday = (): string => {\r\n  let date = new Date().toLocaleDateString(undefined, {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'long',\r\n  })\r\n\r\n  return typeof date === 'string' && date.trim() !== ''\r\n    ? date[0].toUpperCase() + date.slice(1)\r\n    : 'Сегодня'\r\n}\r\n\r\nexport const getTimeLabel = (val: number, type: TimeTypes): string => {\r\n  const decCases = [2, 0, 1, 1, 1, 2]\r\n\r\n  let decCache: number[] = []\r\n  let titles: string[] = []\r\n\r\n  switch (type) {\r\n    case 'h':\r\n      titles = ['час', 'часа', 'часов']\r\n      break\r\n    case 'm':\r\n      titles = ['минута', 'минуты', 'минут']\r\n      break\r\n    case 's':\r\n      titles = ['секунда', 'секунды', 'секунд']\r\n      break\r\n  }\r\n\r\n  if (!decCache[val])\r\n    decCache[val] =\r\n      val % 100 > 4 && val % 100 < 20 ? 2 : decCases[Math.min(val % 10, 5)]\r\n  return titles[decCache[val]]\r\n}\r\n\r\nexport const useInput = (initialValue: string, minLength?: number) => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const [valid, setValid] = useState(false)\r\n\r\n  let min = minLength ?? 0\r\n\r\n  const onChange = (e: any) => {\r\n    if (e.target.value.indexOf(' ') === -1 && e.target.value.length >= min) {\r\n      setValid(true)\r\n    } else setValid(false)\r\n\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    valid,\r\n    setValue,\r\n    setValid,\r\n    onChange,\r\n  }\r\n}\r\n\r\nexport const getWeather = async (city: string) => {\r\n  let req = `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru${apiKey}`\r\n  let data = null\r\n  let error = ''\r\n\r\n  await axios\r\n    .get(req)\r\n    .then((res) => (data = res.data))\r\n    .catch((err) => {\r\n      error =\r\n        err.response.status === 404\r\n          ? 'Город не найден'\r\n          : 'Сервер временно недоступен'\r\n    })\r\n\r\n  return [data, error]\r\n}\r\n\r\nexport const setWeatherIcon = (type: string) =>\r\n  WeatherIcons[type as keyof typeof WeatherIcons] ?? WeatherIcons.ясно\r\n\r\nexport const convertTemp = (temp: number) => Math.round(temp - 273)\r\n\r\nexport const showToast = (text: string) => toast({ html: text })\r\n","import { CSSTransition } from 'react-transition-group'\r\n\r\nimport { useTooltip } from './context'\r\n\r\nconst Tooltip: React.FC = () => {\r\n  const { state } = useTooltip()\r\n\r\n  return (\r\n    <CSSTransition\r\n      timeout={500}\r\n      classNames=\"tooltip\"\r\n      unmountOnExit\r\n      mountOnEnter\r\n      in={state.status}\r\n    >\r\n      <div className=\"tooltip\" style={{ left: state.x, top: state.y + 35 }}>\r\n        {state.title}\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import { createContext, useContext, useState } from 'react'\r\n\r\nimport { ITooltipContext, ITooltipState } from '../../types/components'\r\n\r\nimport Tooltip from './'\r\n\r\nconst initialState: ITooltipState = {\r\n  title: '',\r\n  status: false,\r\n  x: 0,\r\n  y: 0,\r\n}\r\n\r\nconst TooltipContext = createContext<ITooltipContext>({\r\n  state: initialState,\r\n  setState: () => {},\r\n})\r\n\r\nexport const useTooltip = () => {\r\n  const context = useContext(TooltipContext)\r\n\r\n  if (context === undefined) {\r\n    throw new Error('Контекст вызывается вне провайдера.')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst TooltipProvider: React.FC = ({ children }) => {\r\n  const [tooltipState, setTooltipState] = useState<ITooltipState>(initialState)\r\n\r\n  return (\r\n    <TooltipContext.Provider\r\n      value={{ state: tooltipState, setState: setTooltipState }}\r\n    >\r\n      {children}\r\n      <Tooltip />\r\n    </TooltipContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TooltipProvider\r\n","export default __webpack_public_path__ + \"static/media/logo.e9658c8b.svg\";","import { Link } from 'react-router-dom'\r\n\r\nimport { ILogo } from '../../types/components'\r\n\r\nimport logo from '../../assets/logo.svg'\r\n\r\nconst Logo: React.FC<ILogo> = (props) => {\r\n  const node = (\r\n    <img\r\n      src={logo}\r\n      className={\r\n        props.href\r\n          ? 'logo__img'\r\n          : 'logo' + props.className\r\n          ? ` ${props.className}`\r\n          : ''\r\n      }\r\n      alt={props.alt ?? 'Img: Weathr Logo'}\r\n      width={props.width}\r\n      height={props.height}\r\n    />\r\n  )\r\n\r\n  return props.href ? (\r\n    <Link\r\n      to={props.href}\r\n      className={`logo${props.className ? ` ${props.className}` : ''}`}\r\n    >\r\n      {node}\r\n    </Link>\r\n  ) : (\r\n    node\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import { NavLink } from 'react-router-dom'\r\n\r\nimport { IMenuItem } from '../../../types/components'\r\n\r\nconst MenuItem: React.FC<IMenuItem> = (props) => (\r\n  <NavLink\r\n    to={props.to}\r\n    className=\"menu-link\"\r\n    activeClassName={\r\n      props.activeClassName ? props.activeClassName : 'menu-link--current'\r\n    }\r\n  >\r\n    <li className={`menu-item${props.className ? ` ${props.className}` : ''}`}>\r\n      <i className={`material-icons menu-item__icon`}>{props.icon}</i>\r\n      <span className=\"menu-item__text\">{props.text}</span>\r\n    </li>\r\n  </NavLink>\r\n)\r\n\r\nexport default MenuItem\r\n","import MenuItem from './MenuItem'\r\n\r\nimport { IMenu, IMenuItem } from '../../types/components'\r\n\r\nconst renderMenuItems = (items: IMenuItem[], className?: string) =>\r\n  items.map((item: IMenuItem) => (\r\n    <MenuItem\r\n      text={item.text}\r\n      icon={item.icon}\r\n      to={item.to}\r\n      className={className ? className + '-item' : undefined}\r\n      activeClassName={className ? className + '-item--active' : undefined}\r\n    />\r\n  ))\r\n\r\nconst Menu: React.FC<IMenu> = ({ className, items }) => {\r\n  return (\r\n    <ul className={className ?? 'menu'}>{renderMenuItems(items, className)}</ul>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import Logo from '../../components/Logo'\r\nimport Menu from '../../components/Menu'\r\n\r\nimport { IMenuItem } from '../../types/components'\r\n\r\nconst menuItems: IMenuItem[] = [\r\n  {\r\n    text: 'Время',\r\n    icon: 'access_time',\r\n    to: '/time',\r\n  },\r\n  {\r\n    text: 'Погода',\r\n    icon: 'cloud_queue',\r\n    to: '/weather',\r\n  },\r\n]\r\n\r\nconst Header: React.FC = () => (\r\n  <header className=\"app-header\">\r\n    <Logo href=\"/\" />\r\n    <Menu items={menuItems} />\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import { Helmet as ReactHelmet } from 'react-helmet'\r\n\r\nconst Helmet: React.FC<{ title: string }> = (props) => (\r\n  <ReactHelmet title={props.title} />\r\n)\r\n\r\nexport default Helmet\r\n","import { IComponent } from '../../types/components'\r\n\r\nconst Title: React.FC<IComponent> = (props) => (\r\n  <h1 className={props.className + ' title'}>{props.children}</h1>\r\n)\r\n\r\nexport default Title\r\n","import { Link } from 'react-router-dom'\r\n\r\nimport { ICard } from '../../types/components'\r\n\r\nconst Card: React.FC<ICard> = (props) => (\r\n  <div className={`card ${props.className ? ' ' + props.className : ''}`}>\r\n    <div className=\"card-content white-text\">\r\n      <span className=\"card-title\">{props.title}</span>\r\n      <p>{props.text}</p>\r\n    </div>\r\n    <div className=\"card-action\">\r\n      <Link to={props.link}>Перейти</Link>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Card\r\n","import Card from '../../components/Card'\r\n\r\nimport { ICard } from '../../types/components'\r\nimport { ICards } from '../../types/containers'\r\n\r\nconst renderCards = (items: ICard[], className: string) =>\r\n  items.map((item: ICard) => (\r\n    <Card\r\n      link={item.link}\r\n      title={item.title}\r\n      text={item.text}\r\n      className={`${className}${\r\n        item.primary ? ' ' + className + '--primary' : ''\r\n      }\r\n      `}\r\n    ></Card>\r\n  ))\r\n\r\nconst Cards: React.FC<ICards> = (props) => (\r\n  <div className={props.className}>\r\n    {renderCards(props.items, props.className + '__item')}\r\n  </div>\r\n)\r\n\r\nexport default Cards\r\n","import Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport Cards from '../../containers/Cards'\r\n\r\nimport { getHello } from '../../funcs'\r\n\r\nimport { ICard } from '../../types/components'\r\n\r\nconst cards: ICard[] = [\r\n  {\r\n    title: 'Время',\r\n    text: 'Получите текущее время в вашем часовом поясе.',\r\n    link: '/time',\r\n    className: 'home-cards',\r\n    primary: true,\r\n  },\r\n  {\r\n    title: 'Погода',\r\n    text: 'Получите погоду на сегодня в указанном городе.',\r\n    link: '/weather',\r\n    className: 'home-cards',\r\n  },\r\n]\r\n\r\nconst HomePage: React.FC = () => (\r\n  <section className=\"home\">\r\n    <Helmet title=\"Weathr\" />\r\n    <Title className=\"home-title\">{getHello()}</Title>\r\n    <Cards className=\"home-cards\" items={cards} />\r\n  </section>\r\n)\r\n\r\nexport default HomePage\r\n","import { IInput } from '../../types/components'\r\n\r\nconst Input: React.FC<IInput> = (props) => (\r\n  <div className={`input-field col s6 ${props.className}`}>\r\n    <input\r\n      id={props.className}\r\n      type=\"text\"\r\n      value={props.value}\r\n      data-valid={props.valid}\r\n      onChange={props.onChange}\r\n      onKeyPress={props.onKeyPress}\r\n      disabled={props.disabled}\r\n    />\r\n    <label htmlFor={props.className}>{props.placeholder}</label>\r\n  </div>\r\n)\r\n\r\nexport default Input\r\n","import { IButton } from '../../types/components'\r\n\r\nconst Button: React.FC<IButton> = (props) => (\r\n  <button onClick={props.onClick} className={props.className}>\r\n    {props.text ?? props.children}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import { AutoInit } from 'materialize-css'\r\n\r\nimport Input from '../../components/Input'\r\nimport Button from '../../components/Button'\r\n\r\nimport {\r\n  useInput,\r\n  getWeather,\r\n  showToast,\r\n  setWeatherIcon,\r\n  convertTemp,\r\n} from '../../funcs'\r\n\r\nimport { IWeatherForm } from '../../types/containers'\r\n\r\nconst cityMinLength = 3\r\n\r\nconst WeatherForm: React.FC<IWeatherForm> = (props) => {\r\n  const city = useInput('', cityMinLength)\r\n\r\n  AutoInit()\r\n\r\n  const keyPressHandler = (e: any) =>\r\n    e.key === 'Enter' ? buttonClickHandler() : null\r\n\r\n  const buttonClickHandler = async () => {\r\n    if (props.pageState.status) {\r\n      props.setPageState({\r\n        ...props.pageState,\r\n        status: false,\r\n      })\r\n      city.setValue('')\r\n      city.setValid(false)\r\n      return null\r\n    }\r\n\r\n    if (!city.valid && city.value.indexOf(' ') !== -1) {\r\n      showToast('В городе недоступны пробелы')\r\n      return null\r\n    } else if (!city.valid) {\r\n      showToast(`Город не может быть меньше ${cityMinLength} символов`)\r\n      return null\r\n    }\r\n\r\n    await getWeather(city.value).then(([data, error]: any) => {\r\n      if (error !== '') {\r\n        showToast(error ?? 'Ошибка')\r\n        return null\r\n      }\r\n\r\n      let title = data.weather[0].description\r\n      let icon = setWeatherIcon(title)\r\n      let water = data.main.humidity\r\n      let wind = data.wind.speed.toFixed(1)\r\n      let temp = {\r\n        val: convertTemp(data.main.temp),\r\n        min: convertTemp(data.main.temp_min),\r\n        max: convertTemp(data.main.temp_max),\r\n        feels: convertTemp(data.main.feels_like),\r\n      }\r\n\r\n      title = title[0].toUpperCase() + title.substring(1)\r\n\r\n      props.setPageState({\r\n        ...props.pageState,\r\n        status: true,\r\n        title,\r\n        icon,\r\n        water,\r\n        wind,\r\n        temp,\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <Input\r\n        value={city.value}\r\n        valid={city.valid}\r\n        disabled={props.pageState.status}\r\n        onKeyPress={keyPressHandler}\r\n        onChange={city.onChange}\r\n        className={`${props.className}-input`}\r\n        placeholder=\"Ваш город\"\r\n      />\r\n      <Button\r\n        className={`${props.className}-button btn-floating btn-large`}\r\n        onClick={buttonClickHandler}\r\n      >\r\n        <span\r\n          className={`material-icons ${props.className}-button__icon${\r\n            props.pageState.status\r\n              ? ` ${props.className}-button__icon--hide`\r\n              : ''\r\n          }`}\r\n        >\r\n          touch_app\r\n        </span>\r\n        <span\r\n          className={`material-icons ${props.className}-button__icon${\r\n            !props.pageState.status\r\n              ? ` ${props.className}-button__icon--hide`\r\n              : ''\r\n          }`}\r\n        >\r\n          replay\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherForm\r\n","import { IIcon } from '../../types/components'\r\n\r\nexport const Icons = {\r\n  clouds: 'img/clouds.svg',\r\n  cloudWithSun: 'img/cloudsun.svg',\r\n  rain: 'img/rain.svg',\r\n  sun: 'img/sun.svg',\r\n  temp: 'img/temp.svg',\r\n  shtorm: 'img/thunderstorm.svg',\r\n  water: 'img/water.svg',\r\n  wind: 'img/wind.svg',\r\n}\r\n\r\nconst Icon: React.FC<IIcon> = (props) => (\r\n  <img\r\n    className={props.className}\r\n    src={Icons[props.src as keyof typeof Icons] ?? Icons.sun}\r\n    alt={`Icon: ${props.src}`}\r\n  />\r\n)\r\n\r\nexport default Icon\r\n","import { useRef } from 'react'\r\n\r\nimport { IWeather } from '../../types/containers'\r\n\r\nimport { useTooltip } from '../../components/Tooltip/context'\r\n\r\nimport Icon from '../../components/Icon'\r\n\r\nconst WeatherContainer: React.FC<IWeather> = (props) => {\r\n  const { state, setState } = useTooltip()\r\n\r\n  const targetDott = useRef<HTMLInputElement>(null)\r\n\r\n  const dottHoverHandler = (\r\n    status: boolean,\r\n    e?: React.MouseEvent<HTMLDivElement>\r\n  ) => {\r\n    let newState = state\r\n\r\n    newState = {\r\n      status: status,\r\n      title: `Ощущается как ${props.temp.feels}°c`,\r\n      x: status ? e?.pageX || 0 : state.x,\r\n      y: status ? e?.pageY || 0 : state.y,\r\n    }\r\n\r\n    setState(newState)\r\n  }\r\n\r\n  return (\r\n    <div className={`${props.className}-container`}>\r\n      <div className={`${props.className}-poster`}>\r\n        <Icon\r\n          src={props.icon}\r\n          className={`${props.className}-poster__img${\r\n            props.icon === 'sun' ? ' rotate' : ''\r\n          }`}\r\n        />\r\n        <span>{props.title}</span>\r\n      </div>\r\n      <div className={`${props.className}-info`}>\r\n        <div className={`${props.className}-info-temp`}>\r\n          <div className={`${props.className}-info-temp-val`}>\r\n            <span>{props.temp.min}</span>\r\n            <div className={`${props.className}-info-temp-val__dott`}></div>\r\n            <span\r\n              className={`${props.className}-info-temp-val__icon`}\r\n              data-label=\"мин\"\r\n            >\r\n              <Icon src=\"temp\" />\r\n            </span>\r\n          </div>\r\n          <div className={`${props.className}-info-temp-val`}>\r\n            <span>{props.temp.val}</span>\r\n            <div\r\n              className={`${props.className}-info-temp-val__dott`}\r\n              onMouseOver={(e: React.MouseEvent<HTMLDivElement>) =>\r\n                dottHoverHandler(true, e)\r\n              }\r\n              onMouseOut={(e: React.MouseEvent<HTMLDivElement>) =>\r\n                dottHoverHandler(false)\r\n              }\r\n              ref={targetDott}\r\n            ></div>\r\n            <span className={`${props.className}-info-temp-val__icon`}>\r\n              <Icon src=\"temp\" />\r\n            </span>\r\n          </div>\r\n          <div className={`${props.className}-info-temp-val`}>\r\n            <span>{props.temp.max}</span>\r\n            <div className={`${props.className}-info-temp-val__dott`}></div>\r\n            <span\r\n              className={`${props.className}-info-temp-val__icon`}\r\n              data-label=\"макс\"\r\n            >\r\n              <Icon src=\"temp\" />\r\n            </span>\r\n          </div>\r\n          <div className={`${props.className}-info-temp__line`}></div>\r\n        </div>\r\n        <div className={`${props.className}-info-wind`}>\r\n          <div className={`${props.className}-info-wind-item`}>\r\n            <Icon\r\n              src=\"water\"\r\n              className={`${props.className}-info-wind-item__img`}\r\n            />\r\n            <span\r\n              className={`${props.className}-info-wind-item__val`}\r\n              data-label=\"%\"\r\n            >\r\n              {props.water}\r\n            </span>\r\n          </div>\r\n          <div className={`${props.className}-info-wind-item`}>\r\n            <Icon\r\n              src=\"wind\"\r\n              className={`${props.className}-info-wind-item__img`}\r\n            />\r\n            <span\r\n              className={`${props.className}-info-wind-item__val`}\r\n              data-label=\"м/с\"\r\n            >\r\n              {props.wind}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherContainer\r\n","import { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport { IWeatherState } from '../../types/containers'\r\n\r\nimport Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport WeatherForm from '../../containers/WeatherForm'\r\nimport WeatherContainer from '../../containers/WeatherContainer'\r\n\r\nconst initialState: IWeatherState = {\r\n  className: 'weather',\r\n  status: false,\r\n  title: 'Погода',\r\n  icon: '',\r\n  water: 0,\r\n  wind: 0,\r\n  temp: {\r\n    val: 0,\r\n    min: 0,\r\n    max: 0,\r\n    feels: 0,\r\n  },\r\n}\r\n\r\nconst WeatherPage: React.FC = () => {\r\n  const [weather, setWeather] = useState<IWeatherState>(initialState)\r\n\r\n  const changeStateHandler = (state: IWeatherState) => setWeather(state)\r\n\r\n  return (\r\n    <section className=\"weather\">\r\n      <Helmet title=\"Погода | Weathr\" />\r\n      <CSSTransition\r\n        timeout={1000}\r\n        classNames={'weather-title-a'}\r\n        unmountOnExit\r\n        mountOnEnter\r\n        in={!weather.status}\r\n      >\r\n        <Title className=\"weather-title\">Погода</Title>\r\n      </CSSTransition>\r\n      <WeatherForm\r\n        className=\"weather-form\"\r\n        pageState={weather}\r\n        setPageState={changeStateHandler}\r\n      />\r\n      <CSSTransition\r\n        timeout={1000}\r\n        classNames={'weather-a'}\r\n        unmountOnExit\r\n        mountOnEnter\r\n        in={weather.status}\r\n      >\r\n        <WeatherContainer {...weather} />\r\n      </CSSTransition>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default WeatherPage\r\n","import { ICell } from '../../types/components'\r\n\r\nconst Cell: React.FC<ICell> = (props) => (\r\n  <div className={props.className}>\r\n    <span className={props.className + '__text'} data-label={props.label}>\r\n      {props.val}\r\n    </span>\r\n  </div>\r\n)\r\n\r\nexport default Cell\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport Cell from '../../components/Cell'\r\n\r\nimport { getTimeLabel, TimeTypes } from '../../funcs'\r\n\r\nimport { IContainer, ITimeState } from '../../types/containers'\r\nimport { ICellRender } from '../../types/components'\r\n\r\nconst renderCells = (items: ICellRender[], className: string) =>\r\n  items.map((item, key) => (\r\n    <Cell\r\n      className={className + '-item'}\r\n      val={item.val.toString().length !== 1 ? item.val : '0' + item.val}\r\n      label={getTimeLabel(Number(item.val), item.type)}\r\n      key={key}\r\n    />\r\n  ))\r\n\r\nconst Timer: React.FC<IContainer> = (props) => {\r\n  const [time, setTime] = useState<ITimeState>({\r\n    hour: '00',\r\n    minute: '00',\r\n    second: '00',\r\n  })\r\n\r\n  const timeChangeHandler = (localeTime: string) => {\r\n    let newTime = time\r\n\r\n    newTime.hour =\r\n      newTime.hour !== localeTime.split(':')[0]\r\n        ? localeTime.split(':')[0]\r\n        : newTime.hour\r\n\r\n    newTime.minute =\r\n      newTime.minute !== localeTime.split(':')[1]\r\n        ? localeTime.split(':')[1]\r\n        : newTime.minute\r\n\r\n    newTime.second =\r\n      newTime.second !== localeTime.split(':')[2]\r\n        ? localeTime.split(':')[2]\r\n        : newTime.second\r\n    setTime({ ...time, ...newTime })\r\n  }\r\n\r\n  const tickInterval = setInterval(() => {\r\n    timeChangeHandler(new Date().toLocaleTimeString())\r\n  }, 1000)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(tickInterval)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {renderCells(\r\n        [\r\n          {\r\n            val: time.hour,\r\n            type: TimeTypes.h,\r\n          },\r\n          {\r\n            val: time.minute,\r\n            type: TimeTypes.m,\r\n          },\r\n          {\r\n            val: time.second,\r\n            type: TimeTypes.s,\r\n          },\r\n        ],\r\n        props.className\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import { Route } from 'react-router'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport TooltipProvider from './components/Tooltip/context'\r\n\r\nimport Header from './containers/Header'\r\nimport HomePage from './pages/Home'\r\nimport WeatherPage from './pages/Weather'\r\nimport TimePage from './pages/Time'\r\n\r\nconst routes = [\r\n  { path: '/', Component: HomePage, exact: true },\r\n  {\r\n    path: '/time',\r\n    Component: TimePage,\r\n  },\r\n  {\r\n    path: '/weather',\r\n    Component: WeatherPage,\r\n  },\r\n]\r\n\r\nconst App = () => (\r\n  <TooltipProvider>\r\n    <div className=\"app\">\r\n      <Header />\r\n      {routes.map(({ path, Component, exact }) => (\r\n        <Route key={path} exact={exact} path={path}>\r\n          {({ match }) => (\r\n            <CSSTransition\r\n              timeout={1000}\r\n              classNames=\"app-wrapper\"\r\n              unmountOnExit\r\n              mountOnEnter\r\n              in={match != null}\r\n            >\r\n              <Component />\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n      ))}\r\n    </div>\r\n  </TooltipProvider>\r\n)\r\n\r\nexport default App\r\n","import Helmet from '../../components/Helmet'\r\nimport Title from '../../components/Title'\r\nimport Timer from '../../containers/Timer'\r\n\r\nimport { getToday } from '../../funcs'\r\n\r\nconst TimePage: React.FC = () => (\r\n  <section className=\"time\">\r\n    <Helmet title=\"Время | Weathr\" />\r\n    <Title className=\"time-title\">{getToday()}</Title>\r\n    <Timer className=\"time-wrapper\" />\r\n  </section>\r\n)\r\n\r\nexport default TimePage\r\n","import { StrictMode } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport './styles/index.sass'\r\n\r\nrender(\r\n  <StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StrictMode>,\r\n  document.body\r\n)\r\n"],"sourceRoot":""}